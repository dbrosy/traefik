version: '3.5'

services:

  traefik:
    image: traefik:2.0.5
    container_name: traefik
    restart: unless-stopped
    command:
      # Logging
      - --log.level=${LOG_LEVEL}
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Providers
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --api
      # Certificate Resolver
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Use local folder for certs: create first - touch acme.json; chmod 600 acme.json
      #- ./acme.json:/acme.json
      
      # Use volume for certs
      - letsencrypt:/letsencrypt
    labels:
      # Dashboard
      traefik.enable: true
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_DOMAIN}`)
      traefik.http.routers.treafik.entrypoints: web
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.tls.certresolver: letsencrypt
      traefik.http.routers.traefik.middlewares: auth_traefik
      traefik.http.middlewares.auth_traefik.basicauth.users: ${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
      traefik.http.middlewares.restricted_ips.ipwhitelist.sourcerange: ${TRAEFIK_IP_WHITELIST}

      # Global redirect http to https
      treafik.http.routers.http_catchall.rule: hostregexp(`{host:.+}`)
      treafik.http.routers.http_catchall.rule.entrypoints: web
      treafik.http.routers.http_catchall.rule.middlewares: redirect

      # Middleware redirect
      traefik.http.middlewares.redirect.redirectscheme.scheme: https

  whoami:
    image: containous/whoami
    container_name: whoami
    labels:
      traefik.enable: true

      traefik.http.routers.whoami.entrypoints: websecure
      traefik.http.routers.whoami.tls.certresolver: letsencrypt
      traefik.http.routers.whoami.rule: Host(`${WHOAMI_DOMAIN}`) && PathPrefix(`/bar`)
      traefik.http.routers.whoami.middlewares: auth_whoami

      traefik.http.middlewares.auth_whoami.basicauth.users: ${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}

volumes:
  letsencrypt:
    external: true